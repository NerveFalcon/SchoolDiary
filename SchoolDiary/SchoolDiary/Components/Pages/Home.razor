@page "/"
@using Humanizer
@using SchoolDiary.Calendar
@using SchoolDiary.Calendar.Models
@rendermode InteractiveServer

@inject CalendarService Calendar

<PageTitle>Календарь</PageTitle>

<h1>Календарь заданий</h1>
<div class="d-flex gap-4">
	<div class="calendar flex-fill">
		@foreach (var day in Days)
		{
			<div data-day-of-week="@day.DayOfWeek"
			     @onclick="() => Selected = day"
			     class="day rounded-2 p-3 squad d-flex flex-column 
						bg-cream @(day == Selected ? "bg-opacity-25" : "bg-opacity-10")">
				<div class="d-flex justify-content-between">
					<span>@day.DayOfWeek.Humanize()</span>
					<span>@day.Day.ToString("00")</span>
				</div>
				<div class="d-flex flex-column gap-1">
					@foreach (var lesson in day.Lessons.OrderBy(l => l.Serial))
					{
						<div style="background-color: @(lesson.Subject.BgColor);"
						     class="rounded-2 px-2 py-1 d-flex justify-content-between">
							@lesson.Subject.Title
							<span
								class="badge bg-info-subtle text-info-emphasis align-self-center">@day.HomeWorksCount(lesson.Subject)</span>
						</div>
					}
				</div>
			</div>
		}
	</div>

	<aside class="w-25 d-flex flex-column">
		<div class="bg-cream bg-opacity-25 p-4 rounded rounded-2">
			<p><b>Задания на @(Selected.Day.ToString("00")).@Selected.Month</b></p>
			<div class="d-flex flex-column gap-2">
				@foreach (var work in Selected.HomeWorks)
				{
					<div style="background-color: @work.Subject.BgColor;" class="flex-fill p-2 rounded rounded-1">
						<p>@work.Subject.Title</p>
						<p>@work.Title</p>
					</div>
				}
			</div>
		</div>
	</aside>
</div>

@code
{
	@* ReSharper disable once CSharpWarnings::CS8618 *@
	DayModel Selected { get; set; }
	List<DayModel> Days { get; set; } = [];

	protected override Task OnInitializedAsync()
	{
		Days = Calendar.GetCurrent().ToList();
		Selected = Days[DateTime.Today.Day - 1];

		return base.OnInitializedAsync();
	}
}
