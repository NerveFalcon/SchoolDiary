@page "/"
@using Data.Calendar
@using Data.Calendar.Models
@using SchoolDiary.Client.Calendar
@rendermode InteractiveServer

@inject CalendarService Calendar

<PageTitle>Календарь</PageTitle>

<h1>Календарь заданий</h1>
<div class="d-flex gap-4">
	<div class="calendar flex-fill">
		@foreach (var day in Days)
		{
			<DayView Day="day" @bind-Selected="Selected" />
		}
	</div>

	<aside class="w-25 d-flex flex-column">
		<div class="bg-cream bg-opacity-25 p-4 rounded rounded-2">
			<p><b>Задания на @(Selected.Day.ToString("00")).@Selected.Month</b></p>
			<div class="d-flex flex-column gap-2">
				@foreach (var work in Selected.HomeWorks)
				{
					<div style="background-color: rgba(@work.Subject.Color);" class="flex-fill p-2 rounded rounded-1">
						<p>@work.Subject.Title</p>
						<p>@work.Exercise</p>
					</div>
				}
				<ButtonWithModal ModalTitle="Добавление домашнего задания">
					<ButtonContent>+</ButtonContent>
					<Body>
					1234
					</Body>
					<Footer>
						<button type="button" class="btn btn-secondary" @onclick="@context.Invoke">Отмена</button>
						<button type="button" class="btn btn-primary">Добавить предмет</button>
					</Footer>
				</ButtonWithModal>
			</div>
		</div>
	</aside>
</div>

@code {
	DayModel Selected { get; set; } = null!;
	List<DayModel> Days { get; set; } = [];

	protected override Task OnInitializedAsync()
	{
		Days = Calendar.GetCurrent().ToList();
		Selected = Days[DateTime.Today.Day - 1];

		return base.OnInitializedAsync();
	}

}
