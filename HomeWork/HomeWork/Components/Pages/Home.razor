@page "/"
@rendermode InteractiveServer
@using HomeWork.Calendar.Models
@using Humanizer

@inject IJSRuntime JS

<PageTitle>Календарь</PageTitle>

<h1>Календарь заданий</h1>
<div class="d-flex gap-4">
	<div class="calendar flex-fill">
		@foreach (var day in Days)
		{
			<div data-day-of-week="@day.DayOfWeek" class="day bg-cream bg-opacity-10 rounded-2 p-3 squad d-flex flex-column">
				<div class="d-flex justify-content-between">
					<span>@day.DayOfWeek.Humanize()</span>
					<span>@day.Day</span>
				</div>
				<div class="works">
					<div class="bg-secondary-subtle rounded-2 px-2 py-1">
						Задача 1
					</div>
				</div>
			</div>
		}
	</div>
	<aside class="w-25 d-flex flex-column">
		<div class="bg-cream bg-opacity-10 p-4 ">
			<p><b>Задания на завтра</b></p>
			<div class="d-flex flex-columns">
				<div class="task">
					<span>Задание 1</span>
				</div>
			</div>
		</div>
	</aside>
</div>

@code
{
	List<DayModel> Days { get; } = [];

	protected override Task OnInitializedAsync()
	{
		var daysInMonth = DateTime.DaysInMonth(DateTime.Today.Year, DateTime.Today.Month);

		for (var i = 0; i < daysInMonth; i++)
			Days.Add(new(i + 1));

		return base.OnInitializedAsync();
	}

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
			await JS.InvokeVoidAsync("squadNeeded");
	}
}
